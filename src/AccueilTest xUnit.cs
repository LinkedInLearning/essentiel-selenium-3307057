// Generated by Selenium IDE
using System;
using System.Collections.Generic;
using System.Linq;
using System.Threading;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;
using OpenQA.Selenium.Firefox;
using OpenQA.Selenium.Remote;
using OpenQA.Selenium.Support.UI;
using OpenQA.Selenium.Interactions;
using Xunit;
namespace Accueil
{
public class SuiteTests : IDisposable {
  public IWebDriver driver {get; private set;}
  public IDictionary<String, Object> vars {get; private set;}
  public IJavaScriptExecutor js {get; private set;}
  public SuiteTests()
  {
    driver = new ChromeDriver();
    js = (IJavaScriptExecutor)driver;
    vars = new Dictionary<String, Object>();
  }
  public void Dispose()
  {
    driver.Quit();
  }
  [Fact]
  public void AccueilRecherchefructueuse() {
    // Test name: Accueil - Recherche fructueuse
    // Step # | name | target | value
    // 1 | open | /fruits/ | 
    driver.Navigate().GoToUrl("https://labasse.github.io/fruits/");
    // 2 | setWindowSize | 1280x720 | 
    driver.Manage().Window.Size = new System.Drawing.Size(1280, 720);
    // 3 | click | css=.form-control | 
    driver.FindElement(By.CssSelector(".form-control")).Click();
    // 4 | type | css=.form-control | ana
    driver.FindElement(By.CssSelector(".form-control")).SendKeys("ana");
    // 5 | storeXpathCount | xpath=//div[contains(@class, "card ")] | cartes
    vars["cartes"] = driver.FindElements(By.XPath("//div[contains(@class, \"card \")]")).Count;
    // 6 | assert | cartes | 2
    Assert.Equal(vars["cartes"].ToString(), "2");
  }
  [Fact]
  public void AccueilRechercheinfructueuse() {
    // Test name: Accueil - Recherche infructueuse
    // Step # | name | target | value
    // 1 | open | /fruits/ | 
    driver.Navigate().GoToUrl("https://labasse.github.io/fruits/");
    // 2 | setWindowSize | 1280x720 | 
    driver.Manage().Window.Size = new System.Drawing.Size(1280, 720);
    // 3 | click | css=.form-control | 
    driver.FindElement(By.CssSelector(".form-control")).Click();
    // 4 | type | css=.form-control | toto
    driver.FindElement(By.CssSelector(".form-control")).SendKeys("toto");
    // 5 | assertElementNotPresent | css=.row-cols-1 > .col | 
    {
      IReadOnlyCollection<IWebElement> elements = driver.FindElements(By.CssSelector(".row-cols-1 > .col"));
      Assert.True(elements.Count == 0);
    }
  }
}
}