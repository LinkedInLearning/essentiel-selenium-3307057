// Generated by Selenium IDE
const { Builder, By, Key, until } = require('selenium-webdriver')
const assert = require('assert')

describe('Accueil', function() {
  this.timeout(30000)
  let driver
  let vars
  beforeEach(async function() {
    driver = await new Builder().forBrowser('chrome').build()
    vars = {}
  })
  afterEach(async function() {
    await driver.quit();
  })
  it('Accueil - Recherche fructueuse', async function() {
    // Test name: Accueil - Recherche fructueuse
    // Step # | name | target | value
    // 1 | open | /fruits/ | 
    await driver.get("https://labasse.github.io/fruits/")
    // 2 | setWindowSize | 1280x720 | 
    await driver.manage().window().setRect({ width: 1280, height: 720 })
    // 3 | click | css=.form-control | 
    await driver.findElement(By.css(".form-control")).click()
    // 4 | type | css=.form-control | ana
    await driver.findElement(By.css(".form-control")).sendKeys("ana")
    // 5 | storeXpathCount | xpath=//div[contains(@class, "card ")] | cartes
    vars["cartes"] = await driver.findElements(By.xpath("//div[contains(@class, \"card \")]")).length
    // 6 | assert | cartes | 2
    assert(vars["cartes"].toString() == "2")
  })
  it('Accueil - Recherche infructueuse', async function() {
    // Test name: Accueil - Recherche infructueuse
    // Step # | name | target | value
    // 1 | open | /fruits/ | 
    await driver.get("https://labasse.github.io/fruits/")
    // 2 | setWindowSize | 1280x720 | 
    await driver.manage().window().setRect({ width: 1280, height: 720 })
    // 3 | click | css=.form-control | 
    await driver.findElement(By.css(".form-control")).click()
    // 4 | type | css=.form-control | toto
    await driver.findElement(By.css(".form-control")).sendKeys("toto")
    // 5 | assertElementNotPresent | css=.row-cols-1 > .col | 
    {
      const elements = await driver.findElements(By.css(".row-cols-1 > .col"))
      assert(!elements.length)
    }
  })
})
